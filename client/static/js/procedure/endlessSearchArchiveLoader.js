// Generated by CoffeeScript 1.7.1
(function() {
  var App, EndlessArchiveLoader, EndlessSearchArchiveLoader, Model,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  EndlessArchiveLoader = require("./endlessArchiveLoader");

  Model = require("../model");

  App = require("../app");

  EndlessSearchArchiveLoader = (function(_super) {
    __extends(EndlessSearchArchiveLoader, _super);

    function EndlessSearchArchiveLoader() {
      EndlessSearchArchiveLoader.__super__.constructor.call(this);
    }

    EndlessSearchArchiveLoader.prototype.reset = function(option) {
      if (option == null) {
        option = {};
      }
      EndlessSearchArchiveLoader.__super__.reset.call(this, option);
      return this.query = option.query || "";
    };

    EndlessSearchArchiveLoader.prototype._load = function(option, callback) {
      option.input = this.query;
      option.viewRead = true;
      return App.messageCenter.invoke("search", option, function(err, archives) {
        if (archives == null) {
          archives = [];
        }
        if (err) {
          callback(err);
          return;
        }
        return callback(null, archives.map(function(data) {
          return new Model.Archive(data);
        }));
      });
    };

    EndlessSearchArchiveLoader.prototype.destroy = function() {
      return EndlessSearchArchiveLoader.__super__.destroy.call(this);
    };

    return EndlessSearchArchiveLoader;

  })(EndlessArchiveLoader);

  module.exports = EndlessSearchArchiveLoader;

}).call(this);
