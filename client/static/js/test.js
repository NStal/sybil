// Generated by CoffeeScript 1.8.0
(function() {
  var App,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __slice = [].slice;

  App = require("app");

  if (window.location.toString().indexOf("debug") > 0) {
    true;
    App.on("connect", function() {
      var Item, item, results, _i, _ref;
      Item = (function(_super) {
        __extends(Item, _super);

        Item.index = 10;

        function Item() {
          Item.__super__.constructor.call(this, document.createElement("span"));
          this.index = Item.index++;
          this.node$.text(this.index);
        }

        return Item;

      })(Leaf.Widget);
      window.testList = Leaf.Widget.makeList(document.createElement("div"));
      results = [];
      for (item = _i = 0; _i <= 10; item = ++_i) {
        results.push(new Item());
      }
      console.debug(results);
      return (_ref = window.testList).splice.apply(_ref, [0, 0].concat(__slice.call(results)));
    });
  }

}).call(this);
