// Generated by CoffeeScript 1.8.0
(function() {
  var App, CubeLoadingHint, tm,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  App = require("/app");

  tm = require("/templateManager");

  tm.use("cube-loading-hint");

  console.debug("use cube");

  CubeLoadingHint = (function(_super) {
    __extends(CubeLoadingHint, _super);

    function CubeLoadingHint(elem, params) {
      if (params == null) {
        params = {};
      }
      CubeLoadingHint.__super__.constructor.call(this, App.templates["cube-loading-hint"]);
      this.UI.hint$.text(params.hint || "");
      this.expose("show");
      this.expose("hide");
    }

    CubeLoadingHint.prototype.show = function() {
      return this.node$.css({
        display: "block"
      });
    };

    CubeLoadingHint.prototype.hide = function() {
      return this.node$.css({
        display: "none"
      });
    };

    return CubeLoadingHint;

  })(Leaf.Widget);

  module.exports = CubeLoadingHint;

}).call(this);
