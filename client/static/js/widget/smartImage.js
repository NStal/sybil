// Generated by CoffeeScript 1.8.0
(function() {
  var App, SmartImage, tm,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  App = require("/app");

  tm = require("/templateManager");

  tm.use("widget/smartImage");

  SmartImage = (function(_super) {
    __extends(SmartImage, _super);

    SmartImage.setLoader = function(loader) {
      return this.loader = loader;
    };

    function SmartImage(el, params) {
      var prop;
      if (params == null) {
        params = {};
      }
      SmartImage.__super__.constructor.call(this, App.templates.widget.smartImage);
      this.expose("src");
      this.expose("loadingSrc");
      this.expose("on");
      this.node.state = "void";
      for (prop in this.params) {
        this.node[prop] = this.params[prop];
      }
    }

    SmartImage.prototype.onSetState = function(state) {
      this.state = state;
      return this.emit("state", state);
    };

    SmartImage.prototype.onSetLoadingSrc = function(src) {
      if (src === this.loadingSrc) {
        return;
      }
      this.loadingSrc = src;
      if (this.node.state === "loading") {
        return this.UI.image.src = src;
      }
    };

    SmartImage.prototype.onSetErrorSrc = function(src) {
      if (src === this.errorSrc) {
        return;
      }
      this.errorSrc = src;
      if (this.node.state === "fail") {
        return this.UI.image.src = src;
      }
    };

    SmartImage.prototype.onSetSrc = function(src) {
      if (src === this.src) {
        return;
      }
      this.src = src;
      if (this.loadingSrc) {
        this.UI.image.src = this.loadingSrc;
      }
      this.node.state = "loading";
      return SmartImage.loader.cache(src, (function(_this) {
        return function(error) {
          if (error) {
            _this.node.state = "fail";
            if (_this.errorSrc) {
              _this.UI.image.src = _this.errorSrc;
            }
            return;
          }
          _this.node.state = "succuess";
          return _this.UI.image.src = src;
        };
      })(this));
    };

    return SmartImage;

  })(Leaf.Widget);

  module.exports = SmartImage;

}).call(this);
