// Generated by CoffeeScript 1.8.0
(function() {
  var App, Popup,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  App = require("/app");

  Popup = (function(_super) {
    __extends(Popup, _super);

    Popup.zIndex = 500;

    function Popup(template) {
      Popup.__super__.constructor.call(this, template);
      this.mask = document.createElement("div");
      this.mask.style.zIndex = Popup.zIndex++;
      this.mask$ = $(this.mask);
      this.mask$.addClass("mask");
      this.mask$.css({
        "position": "absolute",
        height: "100%",
        width: "100%",
        top: 0,
        left: "0",
        "background-color": "rgba(0,0,0,0.6)"
      });
      this.mask.onclick = (function(_this) {
        return function() {
          return _this.hide();
        };
      })(this);
      this.zIndex = Popup.zIndex++;
    }

    Popup.prototype.hide = function() {
      this.mask$.remove();
      this.remove();
      return App.history.remove(this);
    };

    Popup.prototype.show = function() {
      this.appendTo(document.body);
      this.mask$.appendTo(document.body);
      this.node.style.zIndex = this.zIndex;
      return App.history.push(this, (function(_this) {
        return function() {
          return _this.hide();
        };
      })(this));
    };

    return Popup;

  })(Leaf.Widget);

  module.exports = Popup;

}).call(this);
