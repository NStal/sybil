// Generated by CoffeeScript 1.7.1
(function() {
  var SourceDetail,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  SourceDetail = (function(_super) {
    __extends(SourceDetail, _super);

    function SourceDetail() {
      SourceDetail.__super__.constructor.call(this, App.templates["source-detail"]);
      this.render = this.render.bind(this);
    }

    SourceDetail.prototype.setSource = function(source) {
      if (this.source) {
        this.source.removeListener("change", this.render);
      }
      this.source = source;
      this.source.on("change", this.render);
      this.render();
      return this.source.queryStatisticInfo((function(_this) {
        return function(err) {
          console.error(err);
          return console.error(_this.source.statistic, _this.source.totalArchive);
        };
      })(this));
    };

    SourceDetail.prototype.render = function() {
      this.UI.name$.text(this.source.name);
      this.UI.uri$.text(this.source.uri);
      this.UI.type$.text(this.source.collectorName);
      return this.UI.archives$.text("unread/total " + this.source.unreadCount + "/" + (this.source.totalArchive || '?'));
    };

    SourceDetail.prototype.show = function() {
      return this.node$.show();
    };

    SourceDetail.prototype.hide = function() {
      return this.node$.hide();
    };

    SourceDetail.prototype.onClickClose = function() {
      return this.hide();
    };

    return SourceDetail;

  })(Leaf.Widget);

  window.SourceDetail = SourceDetail;

}).call(this);
