// Generated by CoffeeScript 1.8.0
(function() {
  var AddSourcePopup, App, BackButtonChecker, HintStack, History, ImageDisplayer, ImageLoader, ListScene, OfflineHinter, Scene, SceneSwitcher, SmartImage, SourceScene, Toaster;

  App = require("/app");

  window.App = App;

  App.Errors = require("/common/errors");

  App.Model = require("/common/model");

  ImageLoader = require("/component/imageLoader");

  Scene = require("/view/base/scene");

  SceneSwitcher = require("/view/sceneSwitcher");

  AddSourcePopup = require("/view/sourceUtil/addSourcePopup");

  SourceScene = require("/view/sourceScene/scene");

  ListScene = require("/view/listScene/scene");

  OfflineHinter = require("/view/offlineHinter");

  SmartImage = require("/widget/smartImage");

  HintStack = require("/view/hintStack");

  Toaster = require("/view/toaster");

  ImageDisplayer = require("/view/imageDisplayer");

  History = require("/common/history");

  BackButtonChecker = require("/component/backButtonChecker");

  require("/etc/enhancement");

  App.connect = function() {
    this.messageCenter.on("error", (function(_this) {
      return function(e) {
        console.error(e);
        return console.error(e.stack);
      };
    })(this));
    this.connectionManager.start();
    this.connectionManager.ready((function(_this) {
      return function() {
        App.initialLoaded = true;
        _this.emit("connect");
        setTimeout((function() {
          return $(".landing").addClass("hide");
        }), 200);
        return setTimeout((function() {
          return $(".landing").remove();
        }), 1000);
      };
    })(this));
    this.connectionManager.on("connect", (function(_this) {
      return function() {
        return _this.messageCenter.setConnection(_this.connectionManager.connection);
      };
    })(this));
    return this.connectionManager.on("disconnect", (function(_this) {
      return function() {
        return _this.messageCenter.unsetConnection();
      };
    })(this));
  };

  App.afterInitialLoad = function(callback) {
    if (this.initialLoaded) {
      return callback();
    } else {
      return this.once("connect", callback);
    }
  };

  App.history = new History({
    debug: true
  });

  App.backButton = new BackButtonChecker(App.history);

  App.imageLoader = new ImageLoader();

  SmartImage.setLoader(App.imageLoader);

  App.init = function() {
    var scene, _i, _len, _ref;
    App.history.active();
    App.history.goto(window.location.toString());
    App.sceneSwitcher = new SceneSwitcher();
    App.sceneSwitcher.prependTo(document.body);
    App.imageDisplayer = new ImageDisplayer();
    App.addSourcePopup = new AddSourcePopup();
    App.addSourcePopup.appendTo(document.body);
    App.offlineHinter = new OfflineHinter();
    App.sourceScene = new SourceScene();
    App.listScene = new ListScene();
    App.hintStack = new HintStack();
    _ref = Scene.scenes;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      scene = _ref[_i];
      scene.hide();
    }
    App.sceneSwitcher.switchTo("source scene");
    App.emit("structureReady");
    return App.connect();
  };

  App.showHint = function(str) {
    console.log("HINT:", str);
    return alert(str);
  };

  App.showError = function(str) {
    console.error(str);
    return;
    return alert(str);
  };

  App.toast = function(str) {
    if (!this.toaster) {
      this.toaster = new Toaster();
      this.toaster.appendTo(document.body);
    }
    return this.toaster.show(str);
  };

  App.confirm = function(str, callback) {
    if (confirm(str)) {
      return callback(true);
    } else {
      return callback(false);
    }
  };

  App.templateManager = require("/common/templateManager");

  App.tm = App.templateManager;

  App.messageCenter = new (require("/component/messageCenter"));

  App.mc = App.messageCenter;

  App.connectionManager = new (require("/facility/connectionManager"));

  App.userConfig = new (require("/facility/userConfig"));

  App.modelSyncManager = new (require("/facility/modelSyncManager"));

  $(function() {
    if ($(window).width() < 700) {
      App.isMobile = true;
    }
    console.log("script load complete version " + window.SybilMainContext.version);
    App.templateManager.start();
    console.debug("start tm");
    App.templateManager.on("ready", function(templates) {
      App.templates = templates;
      return App.init();
    });
    return require("/etc/test");
  });

}).call(this);
