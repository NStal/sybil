// Generated by CoffeeScript 1.8.0
(function() {
  var App, Scene,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  App = require("/app");

  Scene = (function(_super) {
    __extends(Scene, _super);

    Scene.scenes = [];

    function Scene(template, name) {
      Scene.__super__.constructor.call(this, template);
      this.name = name;
      Scene.scenes.push(this);
      this.isShow = true;
    }

    Scene.prototype.show = function() {
      if (this.isShow) {
        return;
      }
      this.isShow = true;
      this.node$.show();
      return this.emit("show");
    };

    Scene.prototype.hide = function() {
      if (!this.isShow) {
        return;
      }
      this.isShow = false;
      this.node$.hide();
      return this.emit("hide");
    };

    return Scene;

  })(Leaf.Widget);

  module.exports = Scene;

}).call(this);
