// Generated by CoffeeScript 1.8.0
(function() {
  var App, ContentImage, SmartImage, tm,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  App = require("/app");

  tm = require("/common/templateManager");

  SmartImage = require("/widget/smartImage");

  ContentImage = (function(_super) {
    __extends(ContentImage, _super);

    ContentImage.getSize = function() {
      if ($(window).width() < 746) {
        return "thumb";
      }
      return "medium";
    };

    function ContentImage(el, params) {
      var prop;
      ContentImage.__super__.constructor.call(this, el, params);
      this.expose("originalSrc");
      this.expose("thumbSrc");
      this.expose("mediumSrc");
      this.expose("size");
      for (prop in params) {
        this.node[prop] = params[prop];
      }
    }

    ContentImage.prototype.onSetMediumSrc = function(src) {
      this.mediumSrc = src;
      return this.updateDisplay();
    };

    ContentImage.prototype.onSetOriginalSrc = function(src) {
      this.originalSrc = src;
      return this.updateDisplay();
    };

    ContentImage.prototype.onSetMediumSrc = function(src) {
      this.mediumSrc = src;
      return this.updateDisplay();
    };

    ContentImage.prototype.onSetThumbSrc = function(src) {
      this.thumbSrc = src;
      return this.updateDisplay();
    };

    ContentImage.prototype.updateDisplay = function() {
      if (this.isDestroyed) {
        return;
      }
      if (this.size == null) {
        this.size = ContentImage.size != null ? ContentImage.size : ContentImage.size = ContentImage.getSize();
      }
      if (this.size === "thumb") {
        return this.node.src = this.thumbSrc || this.mediumSrc || this.originalSrc || this.src;
      } else if (ContentImage.size === "original") {
        return this.node.src = this.originalSrc || this.mediumSrc || this.thumbSrc || this.src;
      } else if (ContentImage.size === "medium") {
        return this.node.src = this.mediumSrc || this.originalSrc || this.thumbSrc || this.src;
      } else {
        return this.node.src = this.mediumSrc || this.thumbSrc || this.originalSrc || this.src;
      }
    };

    ContentImage.prototype.getOriginalSrc = function() {
      return this.originalSrc || this.src || this.mediumSrc || this.thumbSrc;
    };

    ContentImage.prototype.onClickNode = function() {
      console.debug("display", "??");
      return this.emit("display", this);
    };

    return ContentImage;

  })(SmartImage);

  module.exports = ContentImage;

}).call(this);
