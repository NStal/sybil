// Generated by CoffeeScript 1.6.3
(function() {
  var PreferenceManager,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  PreferenceManager = (function(_super) {
    __extends(PreferenceManager, _super);

    function PreferenceManager() {
      this.localStorage = window.localStorage;
      this.prefix = "preference_";
      this.watchers = [];
    }

    PreferenceManager.prototype.toggle = function(key) {
      if (this.get(key)) {
        return this.set(key, false);
      } else {
        return this.set(key, true);
      }
    };

    PreferenceManager.prototype.set = function(key, value) {
      var watcher, wrapper, _i, _len, _ref, _results;
      wrapper = {};
      wrapper.value = value;
      this.localStorage.setItem(this.prefix + key, JSON.stringify(wrapper));
      _ref = this.watchers;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        watcher = _ref[_i];
        if (watcher.key === key) {
          _results.push(watcher.callback(value));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    PreferenceManager.prototype.get = function(key) {
      var wrapper;
      wrapper = this.localStorage.getItem(this.prefix + key);
      if (!wrapper) {
        return null;
      }
      wrapper = JSON.parse(wrapper);
      return wrapper.value;
    };

    PreferenceManager.prototype.watch = function(key, callback) {
      var value;
      console.log("when calling watch it will actually trigger once.");
      console.assert(callback);
      this.watchers.push({
        key: key,
        callback: callback
      });
      value = this.get(key);
      return callback(value);
    };

    return PreferenceManager;

  })(Leaf.EventEmitter);

  window.PreferenceManager = PreferenceManager;

}).call(this);
