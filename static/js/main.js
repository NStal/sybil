// Generated by CoffeeScript 1.6.3
(function() {
  var Sybil,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.exports = {};

  String.prototype.escapeBase64 = function() {
    return this.replace(/\//, "*");
  };

  String.prototype.unescapeBase64 = function() {
    return this.replace(/\*/, "/");
  };

  $(function() {
    return window.sybil = new Sybil;
  });

  window.Plugins = [];

  Sybil = (function(_super) {
    __extends(Sybil, _super);

    function Sybil() {
      var _this = this;
      this.rssArr = [];
      this.feeds = {};
      this.plugins = [];
      this.km = new Leaf.KeyEventManager();
      this.km.attachTo(window);
      this.km.master();
      this.km.on("keydown", function(e) {
        if (e.which === Leaf.Key.n && e.altKey) {
          _this.rssList.gotoNextUnreadRss();
          e.capture();
          return;
        }
        if (e.which === Leaf.Key.h && e.altKey) {
          _this.rssList.toggleEmptyRss();
          e.capture();
        }
      });
      window.TemplateManager = new Leaf.TemplateManager();
      window.TemplateManager.use("rss-list", "rss-list-item", "feed-list", "feed-list-item");
      window.TemplateManager.on("ready", function(templates) {
        _this.templates = templates;
        _this.init();
        Sybil.__super__.constructor.call(_this, document.body);
        _this.loadPlugins();
        return _this.router.applyRouteByHash();
      });
      window.TemplateManager.start();
    }

    Sybil.prototype.init = function() {
      this.preferenceManager = new PreferenceManager();
      this.router = new Router();
      this.rssList = new RssList();
      this.feedList = new FeedList();
      this.rssList.landing();
      return this.common = exports;
    };

    Sybil.prototype.loadPlugins = function() {
      var p, plugin, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = Plugins.length; _i < _len; _i++) {
        plugin = Plugins[_i];
        p = new plugin();
        if (p.load) {
          p.load();
        }
        _results.push(this.plugins.push(p));
      }
      return _results;
    };

    Sybil.prototype.unloadPlugins = function() {
      var plugin, _i, _len, _ref, _results;
      _ref = this.plugins;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        plugin = _ref[_i];
        if (plugin.unload) {
          _results.push(plugin.unload());
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    Sybil.prototype.hint = function(text) {
      return alert(text);
    };

    return Sybil;

  })(Leaf.Widget);

}).call(this);
